{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onContextMenu","value","distributeMines","size","num","mineLocations","Set","grid","Array","minesLeft","loc","parseInt","Math","random","has","add","Board","state","lost","board","title","i","v","slice","e","this","undefined","setState","console","log","preventDefault","original","passedBoard","past","result","squares","index","nearby","leftEdge","rightEdge","topEdge","bottomEdge","calculateMove","mines","length","gameOver","filledSquares","row","j","info","push","renderSquare","class","id","Item","as","showMines","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73676111.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nfunction calculateMove(size, squares, index){\n  var nearby = 0;\n  var leftEdge = index % size === 0;\n  var rightEdge = index % size === size-1;\n  var topEdge = index >=0 && index < size;\n  var bottomEdge = index >= size * (size-1) && index < size*size;\n  if (squares[index] === 'X'){\n    return -1;\n  }\n  if (!leftEdge){\n    if (squares[index-1] === 'X'){\n      nearby ++;\n    }\n    if (!topEdge && squares[index-1-size] === 'X'){\n      nearby ++;\n    }\n    if (!bottomEdge && squares[index-1+size] === 'X'){\n      nearby ++;\n    }\n  }\n  if (!rightEdge){\n    if (squares[index+1] === 'X'){\n      nearby ++;\n    }\n    if (!topEdge && squares[index+1-size] === 'X'){\n      nearby ++;\n    }\n    if (!bottomEdge && squares[index+1+size] === 'X'){\n      nearby ++;\n    }\n  }\n  if (!topEdge && squares[index-size] === 'X'){\n    nearby ++;\n  }\n  if (!bottomEdge && squares[index+size] === 'X'){\n    nearby ++;\n  }\n  return nearby;\n}\n\n\nfunction Square(props) {\n  return (\n  <button className=\"square\" onClick={props.onClick} onContextMenu={props.onContextMenu}> \n      {props.value}\n  </button>\n  );\n}\n\nfunction distributeMines(size, num){\n  var mineLocations = new Set();\n  var grid =  Array(size*size);\n  var minesLeft = num;\n  while (minesLeft !== 0){\n    var loc = parseInt(Math.random()*size*size);\n    if (!mineLocations.has(loc)){\n      mineLocations.add(loc);\n      minesLeft --; \n      grid[loc] = 'X';\n    }\n  }\n  return grid\n}\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    var size = 20\n    var mines = 75;\n    const grid = distributeMines(size,mines);\n    this.state={\n      size : size,\n      mineLocations: grid,\n      lost: false,\n      board: Array(size*size),\n      minesLeft:mines,\n      title: \"Medium\",\n    };\n  }\n  renderSquare(i,v) {\n      return (\n          <Square \n          value = {v}\n          onClick = {() => this.onClick(i, true, this.state.board.slice(), new Set())}\n          onContextMenu = {(e) => { this.onContextMenu(i,e)}}\n          />\n      );\n  }\n\n  onContextMenu(i,e){\n    var board = this.state.board.slice();\n    var minesLeft = this.state.minesLeft;\n    if (!this.state.lost){\n      if (board[i] === undefined && minesLeft > 0){\n        board[i] = \"M\";\n        this.setState({board:board, minesLeft: minesLeft-1});\n      }else if (board[i] === \"M\"){\n        board[i] = undefined;\n        this.setState({board:board, minesLeft: minesLeft+1});\n      }\n      console.log(board[i]);\n    }\n    e.preventDefault();\n  }\n\n  onClick(i, original, passedBoard, past){\n    var board = passedBoard;\n    if (!this.state.lost && board[i] === undefined){\n      const size = this.state.size;\n      var result = calculateMove(size,this.state.mineLocations,i);\n      if (result === -1 && original){\n        board[i] = 'X';\n        this.setState({lost: true, board:board});\n      }else{\n        if (result ===0){\n          if (!past.has(i-1) && i%size>0){\n            past.add(i-1);\n            this.onClick(i-1, false, board, past);\n          }\n          if (!past.has(i+1) && i%size <size-1){\n            past.add(i+1);\n            this.onClick(i+1, false, board, past);\n          }\n          if (!past.has(i-size) && i-size>=0){\n            past.add(i-size);\n            this.onClick(i-size, false, board, past);\n          }\n          if (!past.has(i+size) && (i/size)<size-1){\n            past.add(i+size);\n            this.onClick(i+size, false, board, past);\n          }\n        }\n        board[i] = result;\n        \n        this.setState({board:board});\n      }\n    }\n  }\n\n  showMines(){\n    var mines = this.state.mineLocations;\n    var board = this.state.board.slice();\n    for(let i = 0; i < board.length; i++){\n      if (mines[i] === 'X'){\n        board[i] = 'X';\n      }\n    }\n    this.setState({board:board});\n  }\n\n  render() {\n    const board = this.state.board.slice();\n    const size = this.state.size;\n    const minesLeft = \"Mines Left: \" + this.state.minesLeft;\n    var gameOver;\n    if (this.state.lost){\n      gameOver = \"oops you hit a mine. game over :(\";\n    }\n    var grid = [];\n    var filledSquares = 0;\n    for (let i= 0; i<size; i++){\n      var row = [];\n      for(let j = 0; j<size; j++){\n        let info = board[i*size +j];\n        if (info !== undefined){\n          filledSquares ++;\n        }\n        row.push(this.renderSquare(i*size+j, info));          \n      }\n      grid.push(<div className=\"board-row\">\n      {row}\n    </div>);\n    }\n    if (filledSquares === board.length && !this.state.lost){\n      gameOver = \"CONGRATS! you won :D\"\n    }\n      return (\n      <>\n      <div className=\"title\">Minesweeper built w/ React</div>\n      <div className=\"bottom\">created by Adam Wang</div>\n\n      <p>Directions: The numbers on each square represent how many mines are adjacent to that square, including diagonals. Right click (Mouse2) to place an \"M\" where you think a mine is. Good Luck!</p>\n      <DropdownButton class=\"dropdown-menu\" id=\"dropdown-basic-button\" title=\"Choose Difficulty\">\n        <Dropdown.Item as=\"button\" class=\"dropdown-item\" onClick={() => { \n            let size = 3, mines = 1;\n            grid = distributeMines(size,mines); \n            this.setState({title: \"Super Small\", lost:false, size:size, minesLeft:mines, mineLocations:grid, board:Array(size*size)})}}>Super Small (3x3, 1 mine)</Dropdown.Item>\n        <Dropdown.Item as=\"button\" class=\"dropdown-item\" onClick={() => { \n          let size = 10, mines = 10;\n          grid = distributeMines(size,mines); \n          this.setState({title: \"Small\", lost:false, size:size, minesLeft:mines, mineLocations:grid, board:Array(size*size)})}}>Small (10x10; 10 mines)</Dropdown.Item>\n        <Dropdown.Item as=\"button\" class=\"dropdown-item\" onClick={() => { \n          let size = 20, mines = 75;\n          grid = distributeMines(size,mines); \n          this.setState({title: \"Medium\", lost:false, size:size, minesLeft:mines, mineLocations:grid, board:Array(size*size)})}}>Medium (20x20; 75mines)</Dropdown.Item>\n        <Dropdown.Item as=\"button\" class=\"dropdown-item\" onClick={() => { \n          let size = 40, mines = 300;\n          grid = distributeMines(size,mines); \n          this.setState({title: \"Large\", lost:false, size:size, minesLeft:mines, mineLocations:grid, board:Array(size*size)})}}>Large (40x40; 300 mines)</Dropdown.Item>\n        <Dropdown.Item as=\"button\" class=\"dropdown-item\" onClick={() => { \n          var size = 15, mines = size*size-1;\n          grid = distributeMines(size,mines); \n          this.setState({title: \"Troll\", lost:false, size:size, minesLeft:mines, mineLocations:grid, board:Array(size*size)})}}>Troll (all mines except 1)</Dropdown.Item>\n      </DropdownButton>\n      <div>Difficulty: {this.state.title}</div>\n      <div>{minesLeft}</div>\n      <div className=\"gameOver\">{gameOver}</div>\n\n      <div className=\"game\">\n      {grid}\n      </div>\n      <button onClick={()=>this.showMines()}>Show Mines</button>\n      </>\n      );\n  }\n}\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Board />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}